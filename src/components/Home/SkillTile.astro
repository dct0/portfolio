---
import { cn } from "@/lib/utils";
import type { ClassNameValue } from "tailwind-merge";
import getRelativeLuminance from "get-relative-luminance";
import { normalizeColor } from "@/lib/utils";
import { Icon } from "astro-icon/components";

interface Props {
  name: string;
  iconName?: string;
  color?: string;
  textColor?: string;
  class?: ClassNameValue;
}

const hexPattern = /^#?[a-f0-9]{3,8}$/i;

const getTextColor = (text: string) => {
  const color = normalizeColor(text);
  const luminance = hexPattern.test(text)
    ? getRelativeLuminance.default(`#${color}`)
    : -1;

  if (luminance === -1) return "#f3f4f6"; // gray-100
  return luminance < 0.4 ? "#f3f4f6" /* gray-100 */ : "#111827" /*gray-900*/;
};

const {
  name,
  iconName,
  color,
  textColor = getTextColor(Astro.props.color ?? ""),
  class: className
} = Astro.props;
---

<article
  class={cn("p-4 border rounded-md bg-gray-800", className)}
  style={{ backgroundColor: color }}
>
  <header class="mb-6 flex flex-row gap-3">
    <span
      class={"text-2xl font-semibold"}
      style={{
        color: textColor
      }}
    >
      {name}
    </span>
    {iconName && <Icon name={iconName} size={32} color={textColor} />}
  </header>
  <section class="text-justify" style={{ color: textColor }}>
    <slot />
  </section>
</article>
